Is it a build only system or a Build and Test System?

Assume the testing is already covered, but Build it on a global scale.

When is the code build and deploy going to happen? 

Assume when the push is going to happen in a master branch, then automatically build and deploy
is going to happen.

Code needs to be deployed globally, with machines spread across 5-10 regions globally with 100s of 
machines deployed across those regions

All build must be deployed within 30 minutes and the availability must have 2-3 nines, i.e., downtime
of 2-3 days in Total

Deployment is like that of in a large company, where deployment will be done thousands of times in a day

Build size per build can reach upto 10GBs

Separating the two processes:
        - Building Code:   
            - Build will be in the form of a Queue
            - The First Commit will be the first to be deployed
            - The binary will be built on the workers
            - Once the Binary is built, it is stored in storage like a Blob Storage, ex. GCS.
            - The Queues of commits will be processed in pool of servers which would run those jobs
            - The output of those jobs in the form of binary will be stored in GCS bucket
            - The job details will be stored in SQL table which will be used to deque the next job 
            - The fields in the job table should be: 
                - id
                - name of the binary which will be referenced to a GCS bucket
                - time of creation of the job
                - time of merger with the master branch (SHA)
                - status of build : Succeed or Failed
                - Last Heart Beat: HearBeat sent from the worker nodes to the Auxiliary service
            - The choice of SQL is because, it will uphold the acid properties and the distributed
            workers will be able to select the right job as per time of creation thereby maintaning
            concurrencies
            - BEGIN TRANSACTION; SELECT * FROM JOBS WHERE STATUS = "QUEUED" ORDER BY CREATED_AT
             ASC LIMIT 1; UPDATE jobs SET STATUS = "RUNNING" WHERE CREATED_AT IN (SELECT MIN(CREATE_AT) 
             FROM jobs WHERE STATUS ="QUEUED"); COMMIT;
            - Rollback the Transaction if no active QUEUED job is found 
            - Make Indexing on Status and Created at Table 
            - When will these workers actually execute these deque operation:
                - When the workers are done building a code, that time they will query the table for 
                subsequent jobs
                - Incase there are 100 workers free, and 20 workers goes to the database every 5 seconds,
                that can be handled preety well by SQL Databases
            - What happens when a worker building code and power cut happens?
                - Healthchecks on workers needs to be carried out frequently so as to ensure that they
                are healthy. The Healthchecks needs to be carried out by an auxiliary service
                - The Last Heart Beat value gives the indication whether the worker node is active or it is 
                dead, while carrying out with the job
                - Through another SQL job, if the HeartBeat Time exceeds a certain time, the job will again 
                be updated to queued 
            - 5000 builds per day and 15 mins taken by 1 worker, so in one hour 1 worker will build 4
            builds and in 1 day approx 100 builds so in total 5000/100=50 workers will be required
            which has to be horizontally scalable as the build will be non-uniformly distributed during
            the business hours
            - Once the build is complete, the blob stored info is saved in the GCS bucket and consequently
            the row in the database table is updated to completed
            - For replication of the blob storage, n numbers of regional blob storage will be set up and
            once a worker is free it can take up new jobs, meanwhile the replication to the regional 
            blob storage can happen through peer to peer networks
            - Deployment of the code should only be done once the replication is complete over all the
            regional buckets:
                - A separate service to check whether the specific build name is replicated over all the 
                regional buckets and if the aggregate count satisfies, then update the status into
                a particular service. 
        - Deploying Code:
            - An engineer presses a button to deploy the build
            - The download of the successful build to the thousands of servers for build spread across 
            10 regions will happen through a peer to peer network for faster downloads
            - The response from the button contains the build version in a key-value store and once the 
            key is pressed, it flows to the individual region and the machines which are keeping track 
            of the centralized regional metric, begins downloading the new versions incase the metric
            is different then what they currently have.