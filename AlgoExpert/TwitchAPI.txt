- Channel Info: Streamer's info, followers, Channel's description, etc
    - GetChannelInfo API 
        - request: (channelID: string)
        - response: 
            - name: str
            - description: str
            - currentStreamTitle: str
            - followerCount: int
    
- follow (will not update in real time, until the page is refreshed)
    - ToggleFollow API:
        - request: (channelID: string)
        - response:
            - follow/unfollow
- subscribe (paid feature)
    - Subscribing is similar to follow, with some additional details, like providing payment
    details (credit card, paypal, etc)
    - CreateSub API:
        - requests:    
            - channelID: str
            - subInfo: subInfo
            - payInfo: payInfo
        - response:
            - subscriptionID: str
            - validity: timeStamp
            - description: str
    - CancelSub API:
        - requests: 
            - channelID: str
        - response:
            - description: str
            
- live chat (handle emotes):
    - See Messages which are coming in
    - Type in Messages
    - Handle Emotes
    - When ever an user types the emote like :kappa:, then the emote will be pulled out from a 
    lookup table and displayed.
    - streamMessage API: Long Lived Websocket connection for steaming messages continously
        - requests:
            - channelID: str
        - response: 
            - message {sender: str, text: str, timestamp: ISO dateFormat}
    - sendMessage:
        - Requests:
            - channelID: str
            - message: str
        - Response:
            - message: str / error: if user is banned from sending message
- live stream video with video info:
    - streamVideo:
        - requests: 
            - channelID: str
            - videoQuality: enum
        - response:
            - VideoInfo

- concurrent viewers (update every 30 seconds)
    - when ever an user starts streaming videos, they become concurrent viewer of that stream
    - getConcViewers:
        - requests: 
            - channelID: str
        - response:
            - count: integer
- bannedUsersInfo:
    - GetRelToChannel(channelID: str)
        - requests:
            - channelID: str
        - response:
            - isBanned: bool
            - isFollowing: bool
            - subscription: sub/null
            - ismoderator: bool
- recommended channels

For this interview we are designing all of this, except for the recommended channels

If a user wants to follow a particular channel, then automatically that button should get
switched from follow to unfollow in real time. Same for subscribe to unsubscribe.

For the live chats, we do want to have twitch emotes but we don't have to worry about emotes
which are applicable for select subscribers or purchasable emotes.

Also we should handle banning of users in chats who are trying to spam the chats.

When ever an user tries to access any service, the user's token will be passed by default.

